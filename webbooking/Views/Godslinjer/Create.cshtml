@model webbooking.Models.Godslinjer
@using webbooking.Models
@{
    ViewBag.Title = "Create";
}

<h2>Create Godslinjer</h2>




<form method="post" action="/Godslinjer/Create">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(model => model.id)

        <div class="form-group">
            @Html.LabelFor(model => model.mærkeOgMr, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.mærkeOgMr, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.mærkeOgMr, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.antal, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.antal, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.antal, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.art.vertion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    List<SelectListItem> sl = new List<SelectListItem> { };
                    foreach (Paller palle in ViewBag.Paller)
                    {
                        sl.Add(new SelectListItem() { Text = palle.vertion, Value = palle.id.ToString() });
                    }
                    @Html.DropDownListFor(model => model.art, sl, new { @class = "form-control btn-primary dropdown-toggle" });
                }
                @Html.ValidationMessageFor(model => model.art, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.inhold, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.inhold, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.inhold, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.bruttovægt, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.bruttovægt, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.bruttovægt, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.nettoVægt, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nettoVægt, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nettoVægt, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.volume, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.volume, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.volume, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.volumeKode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.volumeKode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.volumeKode, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.temperatur, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.temperatur, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.temperatur, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.emballageType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.emballageType, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.emballageType, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.antalAfEmballage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.antalAfEmballage, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.antalAfEmballage, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.afhentningsadresse, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.afhentningsadresse, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.afhentningsadresse, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.leveringsadresse, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.leveringsadresse, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.leveringsadresse, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.bundPll, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.bundPll, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.bundPll, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.bytteEmb, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.bytteEmb, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.bytteEmb, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.bytteEmbArt.vertion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    List<SelectListItem> sl2 = new List<SelectListItem> { };
                    foreach (Paller palle2 in ViewBag.Paller)
                    {
                        sl2.Add(new SelectListItem() { Text = palle2.vertion, Value = palle2.id.ToString() });
                    }
                    @Html.DropDownListFor(model => model.bytteEmbArt, sl2, new { @class = "form-control btn-primary dropdown-toggle" });
                }
                @Html.ValidationMessageFor(model => model.bytteEmbArt, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.kolliAntal, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.kolliAntal, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.kolliAntal, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.kolliArt.vertion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    List<SelectListItem> sl3 = new List<SelectListItem> { };
                    foreach (Paller palle2 in ViewBag.Paller)
                    {
                        sl3.Add(new SelectListItem() { Text = palle2.vertion, Value = palle2.id.ToString() });
                    }
                    @Html.DropDownListFor(model => model.kolliArt, sl3, new { @class = "form-control btn-primary dropdown-toggle" });
                }
                @Html.ValidationMessageFor(model => model.kolliArt, "", new { @class = "text-danger" })
            </div>
        </div>
        <button type="submit" class="btn btn-default">Done</button>
    </form>
